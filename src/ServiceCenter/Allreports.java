/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ServiceCenter;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfName;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Font;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Shehan Atapattu
 */
public class Allreports extends javax.swing.JFrame {

    /**
     * Creates new form Allreports
     */
    public Allreports() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        pdatefrom = new datechooser.beans.DateChooserCombo();
        pdateto = new datechooser.beans.DateChooserCombo();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel29 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        ptotal = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        dateChooserCombo9 = new datechooser.beans.DateChooserCombo();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        dateChooserCombo5 = new datechooser.beans.DateChooserCombo();
        dateChooserCombo6 = new datechooser.beans.DateChooserCombo();
        jLabel30 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jButton16 = new javax.swing.JButton();
        jLabel33 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        dateChooserCombo7 = new datechooser.beans.DateChooserCombo();
        jLabel26 = new javax.swing.JLabel();
        dateChooserCombo8 = new datechooser.beans.DateChooserCombo();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jButton17 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1200, 800));
        setMinimumSize(new java.awt.Dimension(1200, 800));
        setSize(new java.awt.Dimension(1205, 843));

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setMaximumSize(new java.awt.Dimension(1200, 800));
        jPanel2.setPreferredSize(new java.awt.Dimension(1200, 800));
        jPanel2.setLayout(null);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 3, true));
        jPanel7.setLayout(null);

        jButton1.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jButton1.setText("Get Details");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton1);
        jButton1.setBounds(690, 100, 125, 40);

        jLabel15.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Select Time Period");
        jPanel7.add(jLabel15);
        jLabel15.setBounds(10, 10, 160, 24);

        jLabel16.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("To:");
        jPanel7.add(jLabel16);
        jLabel16.setBounds(321, 40, 30, 30);

        jLabel17.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("From:");
        jPanel7.add(jLabel17);
        jLabel17.setBounds(20, 40, 60, 30);

        pdatefrom.setCalendarPreferredSize(new java.awt.Dimension(500, 300));
        jPanel7.add(pdatefrom);
        pdatefrom.setBounds(80, 40, 220, 30);

        pdateto.setCalendarPreferredSize(new java.awt.Dimension(500, 300));
        jPanel7.add(pdateto);
        pdateto.setBounds(360, 40, 210, 30);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Stock Items", "Date" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jPanel7.add(jComboBox1);
        jComboBox1.setBounds(690, 40, 110, 30);

        jLabel29.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(240, 240, 240));
        jLabel29.setText("Report By:");
        jPanel7.add(jLabel29);
        jLabel29.setBounds(590, 40, 90, 24);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/sariya1200.jpg"))); // NOI18N
        jPanel7.add(jLabel5);
        jLabel5.setBounds(-40, -20, 890, 190);

        jPanel2.add(jPanel7);
        jPanel7.setBounds(170, 180, 830, 160);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Brand", "Model", "Qty", "Unit price(Rs)", "Total(Rs)"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(80, 380, 990, 270);

        jButton5.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jButton5.setText("Report");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton5);
        jButton5.setBounds(961, 730, 100, 40);

        jButton4.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jButton4.setText("Home");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4);
        jButton4.setBounds(310, 740, 100, 40);

        jLabel28.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(240, 240, 240));
        jLabel28.setText("Total: Rs");
        jPanel2.add(jLabel28);
        jLabel28.setBounds(794, 670, 90, 30);

        jButton6.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jButton6.setText("Exit");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton6);
        jButton6.setBounds(450, 740, 100, 40);

        ptotal.setEditable(false);
        jPanel2.add(ptotal);
        ptotal.setBounds(880, 670, 170, 30);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/sariya1200.jpg"))); // NOI18N
        jPanel2.add(jLabel3);
        jLabel3.setBounds(0, 0, 1210, 800);

        jPanel1.setLayout(null);
        jPanel2.add(jPanel1);
        jPanel1.setBounds(870, 590, 70, 20);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/sariya1200.jpg"))); // NOI18N
        jPanel2.add(jLabel4);
        jLabel4.setBounds(160, 170, 850, 180);

        jTabbedPane1.addTab("Purchases", jPanel2);

        jPanel3.setMinimumSize(new java.awt.Dimension(1200, 800));
        jPanel3.setLayout(null);

        jPanel17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 3));
        jPanel17.setLayout(null);

        jButton9.setBackground(new java.awt.Color(204, 204, 204));
        jButton9.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jButton9.setText("Get Details");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel17.add(jButton9);
        jButton9.setBounds(510, 73, 125, 40);

        jLabel31.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("Date:");
        jPanel17.add(jLabel31);
        jLabel31.setBounds(10, 80, 50, 24);

        dateChooserCombo9.setEnabled(false);
        jPanel17.add(dateChooserCombo9);
        dateChooserCombo9.setBounds(70, 80, 140, 30);

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/sariya1200.jpg"))); // NOI18N
        jPanel17.add(jLabel14);
        jLabel14.setBounds(-100, -30, 1110, 170);

        jPanel3.add(jPanel17);
        jPanel17.setBounds(260, 140, 650, 130);

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ItemNo", "Item Name", "Available Quantity"
            }
        ));
        jScrollPane5.setViewportView(jTable5);

        jPanel3.add(jScrollPane5);
        jScrollPane5.setBounds(76, 300, 1060, 206);

        jButton7.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jButton7.setText("Home");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton7);
        jButton7.setBounds(100, 643, 83, 40);

        jButton8.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jButton8.setText("Exit");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton8);
        jButton8.setBounds(210, 643, 80, 40);

        jButton10.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jButton10.setText("Report");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton10);
        jButton10.setBounds(910, 640, 91, 40);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/sariya1200.jpg"))); // NOI18N
        jPanel3.add(jLabel7);
        jLabel7.setBounds(0, 0, 1200, 800);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/sariya1200.jpg"))); // NOI18N
        jPanel3.add(jLabel8);
        jLabel8.setBounds(230, 130, 780, 150);

        jTabbedPane1.addTab("Stock Report", jPanel3);

        jPanel5.setMinimumSize(new java.awt.Dimension(1200, 800));
        jPanel5.setPreferredSize(new java.awt.Dimension(1200, 800));
        jPanel5.setLayout(null);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 3)));
        jPanel9.setLayout(null);

        jButton2.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jButton2.setText("Get Sales");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel9.add(jButton2);
        jButton2.setBounds(660, 79, 111, 40);

        jLabel18.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Select Time Period");
        jPanel9.add(jLabel18);
        jLabel18.setBounds(20, 10, 160, 24);

        jLabel19.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("To:");
        jPanel9.add(jLabel19);
        jLabel19.setBounds(310, 26, 50, 50);

        jLabel20.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("From:");
        jPanel9.add(jLabel20);
        jLabel20.setBounds(80, 34, 48, 30);

        dateChooserCombo5.setCalendarPreferredSize(new java.awt.Dimension(500, 300));
        jPanel9.add(dateChooserCombo5);
        dateChooserCombo5.setBounds(130, 40, 170, 22);

        dateChooserCombo6.setCalendarPreferredSize(new java.awt.Dimension(500, 300));
        jPanel9.add(dateChooserCombo6);
        dateChooserCombo6.setBounds(350, 40, 180, 22);

        jLabel30.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(240, 240, 240));
        jLabel30.setText("Report By:");
        jPanel9.add(jLabel30);
        jLabel30.setBounds(550, 20, 100, 50);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Stock Items", "Date" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jPanel9.add(jComboBox2);
        jComboBox2.setBounds(650, 30, 120, 30);

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/sariya1200.jpg"))); // NOI18N
        jPanel9.add(jLabel11);
        jLabel11.setBounds(-80, -10, 880, 150);

        jPanel5.add(jPanel9);
        jPanel9.setBounds(200, 140, 800, 140);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ItemNo", "ItemName", "Sales", "Revenue"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jPanel5.add(jScrollPane3);
        jScrollPane3.setBounds(30, 330, 540, 230);

        jButton3.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jButton3.setText("Report");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton3);
        jButton3.setBounds(920, 680, 91, 47);

        jButton15.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jButton15.setText("Home");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton15);
        jButton15.setBounds(110, 680, 100, 47);

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ItemNo", "ItemName", "Sales", "Revenue"
            }
        ));
        jScrollPane6.setViewportView(jTable6);

        jPanel5.add(jScrollPane6);
        jScrollPane6.setBounds(630, 330, 540, 230);

        jButton16.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jButton16.setText("Exit");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton16);
        jButton16.setBounds(240, 680, 100, 47);

        jLabel33.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(240, 240, 240));
        jLabel33.setText("Total: Rs");
        jPanel5.add(jLabel33);
        jLabel33.setBounds(750, 620, 80, 30);

        jTextField7.setEditable(false);
        jPanel5.add(jTextField7);
        jTextField7.setBounds(840, 620, 170, 30);

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/sariya1200.jpg"))); // NOI18N
        jPanel5.add(jLabel9);
        jLabel9.setBounds(0, 0, 1200, 800);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/sariya1200.jpg"))); // NOI18N
        jPanel5.add(jLabel10);
        jLabel10.setBounds(160, 30, 880, 170);

        jTabbedPane1.addTab("Sales", jPanel5);

        jPanel6.setLayout(null);

        jLabel24.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("From:");
        jPanel6.add(jLabel24);
        jLabel24.setBounds(220, 190, 60, 24);

        dateChooserCombo7.setCalendarPreferredSize(new java.awt.Dimension(500, 300));
        jPanel6.add(dateChooserCombo7);
        dateChooserCombo7.setBounds(270, 190, 180, 30);

        jLabel26.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("To:");
        jPanel6.add(jLabel26);
        jLabel26.setBounds(470, 190, 40, 26);
        jPanel6.add(dateChooserCombo8);
        dateChooserCombo8.setBounds(500, 190, 180, 30);

        jLabel27.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Select Time Period");
        jPanel6.add(jLabel27);
        jLabel27.setBounds(150, 150, 170, 24);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Item", "Brand", "Model", "Qty", "Date", "Reason"
            }
        ));
        jScrollPane4.setViewportView(jTable4);

        jPanel6.add(jScrollPane4);
        jScrollPane4.setBounds(162, 267, 818, 160);

        jButton17.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jButton17.setText("Get report");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton17);
        jButton17.setBounds(710, 180, 130, 40);

        jButton20.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jButton20.setText("Report");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton20);
        jButton20.setBounds(780, 610, 130, 50);

        jButton19.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jButton19.setText("Home");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton19);
        jButton19.setBounds(120, 610, 130, 50);

        jButton22.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jButton22.setText("Exit");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton22);
        jButton22.setBounds(300, 610, 130, 50);

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/sariya1200.jpg"))); // NOI18N
        jPanel6.add(jLabel13);
        jLabel13.setBounds(0, 0, 1200, 800);

        jTabbedPane1.addTab("Removed Items", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String today = new SimpleDateFormat("yyyy-MM-dd").format(Calendar.getInstance().getTime());
        JFileChooser dialog = new JFileChooser();
        dialog.setSelectedFile(new File("purchase report by " + jComboBox1.getSelectedItem().toString() + " - " + today + ".pdf"));
        int dialogResult = dialog.showSaveDialog(null);
        if (dialogResult == JFileChooser.APPROVE_OPTION) {
            String filePath = dialog.getSelectedFile().getPath();

            try {

                Document myDocument = new Document();

                PdfWriter myWriter = PdfWriter.getInstance(myDocument, new FileOutputStream(filePath));
                myDocument.open();

                myWriter.setPageEvent(new MyPdfPageEventHelper("saman.png"));
                myDocument.add(new Paragraph("\n\n\n\n\n\n\n\n\n"));

                myDocument.add(new Paragraph("", FontFactory.getFont(FontFactory.TIMES_BOLD, 20, Font.BOLD)));
                myDocument.add(new Paragraph("", FontFactory.getFont(FontFactory.TIMES_BOLD, 15, Font.PLAIN)));
                myDocument.add(new Paragraph("", FontFactory.getFont(FontFactory.TIMES_BOLD, 15, Font.PLAIN)));
                Paragraph ph = new Paragraph("PURCHASES\n", FontFactory.getFont(FontFactory.TIMES_BOLD, 20, Font.BOLD));
                ph.setAlignment(Paragraph.ALIGN_CENTER);
                myDocument.add(ph);

                myDocument.add(new Paragraph("\n\n"));
                if (jComboBox1.getSelectedItem().toString().equals("Stock Items")) {
                    PdfPTable table = new PdfPTable(6);

                    table.setWidthPercentage(100);
                    float[] columnWidths = new float[]{5, 5, 5, 5, 5, 5};
                    table.setWidths(columnWidths);
                    String from = new SimpleDateFormat("dd-MM-yyyy").format(pdatefrom.getSelectedDate().getTime());
                    String to = new SimpleDateFormat("dd-MM-yyyy").format(pdateto.getSelectedDate().getTime());

                    PdfPTable table3 = new PdfPTable(2);
                    table3.setWidthPercentage(100);
                    float[] columnWidths3 = new float[]{12, 4};
                    table3.setWidths(columnWidths3);

                    PdfPCell cell1 = new PdfPCell(new Paragraph("from: " + from, FontFactory.getFont(FontFactory.TIMES, 12)));

                    PdfPCell cell2 = new PdfPCell(new Paragraph("To: " + to, FontFactory.getFont(FontFactory.TIMES, 12)));
                    cell2.setHorizontalAlignment(Element.ALIGN_LEFT);
                    cell1.setBorderColor(BaseColor.WHITE);
                    cell2.setBorderColor(BaseColor.WHITE);

                    table3.addCell(cell1);
                    table3.addCell(cell2);

                    myDocument.add(table3);
                    myDocument.add(new Paragraph("\n\n"));
                    // myDocument.add(new Paragraph(new Date().toString()));
                    // myDocument.add(new Paragraph("--------------------------------------------------------------------------------------------------------------------------------"));
                    table.addCell(new PdfPCell(new Paragraph("Item Name", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Brand", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Model", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Qty", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Unit Price", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Total(Rs)", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));

                    for (int i = 0; i < jTable1.getRowCount(); i++) {

                        table.addCell(new PdfPCell(new Paragraph(jTable1.getValueAt(i, 0).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(jTable1.getValueAt(i, 1).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(jTable1.getValueAt(i, 2).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(jTable1.getValueAt(i, 3).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(jTable1.getValueAt(i, 4).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(jTable1.getValueAt(i, 5).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));

                    }

                    myDocument.add(table);
                    myDocument.add(new Paragraph("\n"));
                    Paragraph pp = new Paragraph("Total Purchases:Rs " + ptotal.getText() + "", FontFactory.getFont(FontFactory.TIMES, 12));
                    pp.setAlignment(Element.ALIGN_RIGHT);
                    myDocument.add(pp);
                    myDocument.add(new Paragraph("\n\n"));

                    Paragraph pt = new Paragraph("Thank You!\n", FontFactory.getFont(FontFactory.TIMES, 12));
                    pt.setAlignment(Paragraph.ALIGN_CENTER);
                    myDocument.add(pt);
                    myDocument.add(new Paragraph("\n"));

                    myDocument.add(new Paragraph("--------------------------------------------------------------------------------------------------------------------------------"));

                    myDocument.close();

                } else {
                    PdfPTable table5 = new PdfPTable(6);

                    String from = new SimpleDateFormat("dd-MM-yyyy").format(pdatefrom.getSelectedDate().getTime());
                    String to = new SimpleDateFormat("dd-MM-yyyy").format(pdateto.getSelectedDate().getTime());

                    PdfPTable table3 = new PdfPTable(2);
                    table3.setWidthPercentage(100);
                    float[] columnWidths3 = new float[]{12, 4};
                    table3.setWidths(columnWidths3);

                    PdfPCell cell1 = new PdfPCell(new Paragraph("from: " + from, FontFactory.getFont(FontFactory.TIMES, 12)));
                    //plo.setAlignment(Paragraph.ALIGN_RIGHT);
                    // myDocument.add(plo);

                    PdfPCell cell2 = new PdfPCell(new Paragraph("To: " + to, FontFactory.getFont(FontFactory.TIMES, 12)));
                    cell2.setHorizontalAlignment(Element.ALIGN_LEFT);
                    cell1.setBorderColor(BaseColor.WHITE);
                    cell2.setBorderColor(BaseColor.WHITE);

                    table3.addCell(cell1);
                    table3.addCell(cell2);

                    myDocument.add(table3);

                    myDocument.add(new Paragraph("\n\n"));
                    PdfPTable table = new PdfPTable(7);

                    table.setWidthPercentage(100);
                    float[] columnWidths = new float[]{5, 5, 5, 5, 5, 5, 5};
                    table.setWidths(columnWidths);

                    // myDocument.add(new Paragraph(new Date().toString()));
                    //   myDocument.add(new Paragraph("--------------------------------------------------------------------------------------------------------------------------------"));
                    table.addCell(new PdfPCell(new Paragraph("Date", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Item Name", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Brand", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Model", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Qty", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Unit Price", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Total", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));

                    for (int i = 0; i < jTable1.getRowCount(); i++) {

                        table.addCell(new PdfPCell(new Paragraph(jTable1.getValueAt(i, 0).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(jTable1.getValueAt(i, 1).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(jTable1.getValueAt(i, 2).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(jTable1.getValueAt(i, 3).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(jTable1.getValueAt(i, 4).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(jTable1.getValueAt(i, 5).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(jTable1.getValueAt(i, 6).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));

                    }

                    myDocument.add(table);
                    myDocument.add(new Paragraph("\n"));
                    Paragraph pp = new Paragraph("Total Purchases: " + ptotal.getText() + "", FontFactory.getFont(FontFactory.TIMES, 12));
                    pp.setAlignment(Element.ALIGN_RIGHT);
                    myDocument.add(pp);
                    myDocument.add(new Paragraph("\n\n"));

                    Paragraph pt = new Paragraph("Thank You!\n", FontFactory.getFont(FontFactory.TIMES, 12));
                    pt.setAlignment(Paragraph.ALIGN_CENTER);
                    myDocument.add(pt);
                    myDocument.add(new Paragraph("\n"));

                    myDocument.add(new Paragraph("--------------------------------------------------------------------------------------------------------------------------------"));

                    myDocument.close();

                }

                JOptionPane.showMessageDialog(null, "Report was successfully generated");

            } catch (DocumentException ex) {
                Logger.getLogger(Allreports.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Allreports.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        DashBoard dbd = new DashBoard();
        dbd.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton6ActionPerformed
    int count = 0;
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed

        view v = new view();
        try {
            ResultSet rs = v.getTable("SELECT `ItemID`, `ItemName`, `Brand`, `Model`, `TotalStock` as 'Available Qty' FROM `item`");
            jTable5.setModel(DbUtils.resultSetToTableModel(rs));
            count++;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error!! try again");
            count = 0;
        }

    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        DashBoard dbd = new DashBoard();
        dbd.setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed

        String today = new SimpleDateFormat("yyyy-MM-dd").format(Calendar.getInstance().getTime());
        JFileChooser dialog = new JFileChooser();
        dialog.setSelectedFile(new File("stock report " + today + ".pdf"));
        int dialogResult = dialog.showSaveDialog(null);
        if (dialogResult == JFileChooser.APPROVE_OPTION) {
            String filePath = dialog.getSelectedFile().getPath();

            try {

                Document myDocument = new Document();

                PdfWriter myWriter = PdfWriter.getInstance(myDocument, new FileOutputStream(filePath));
                myDocument.open();

                myWriter.setPageEvent(new MyPdfPageEventHelper("saman.png"));
                myDocument.add(new Paragraph("\n\n\n\n\n\n\n\n\n"));

                myDocument.add(new Paragraph("", FontFactory.getFont(FontFactory.TIMES_BOLD, 20, Font.BOLD)));
                myDocument.add(new Paragraph("", FontFactory.getFont(FontFactory.TIMES_BOLD, 15, Font.PLAIN)));
                myDocument.add(new Paragraph("", FontFactory.getFont(FontFactory.TIMES_BOLD, 15, Font.PLAIN)));

                Paragraph ph = new Paragraph("Stock Report\n", FontFactory.getFont(FontFactory.TIMES_BOLD, 20, Font.BOLD));
                ph.setAlignment(Paragraph.ALIGN_CENTER);
                myDocument.add(ph);
                myDocument.add(new Paragraph("\n\n"));
                PdfPTable table = new PdfPTable(5);

                table.setWidthPercentage(100);
                float[] columnWidths = new float[]{5, 5, 5, 5, 5};
                table.setWidths(columnWidths);

                String adf = new SimpleDateFormat("dd-MM-yyyy").format(new Date());

                myDocument.add(new Paragraph("Date :" + adf + "\n", FontFactory.getFont(FontFactory.TIMES, 12)));
                myDocument.add(new Paragraph("\n\n"));
                //  myDocument.add(new Paragraph(new Date().toString()));
                // myDocument.add(new Paragraph("--------------------------------------------------------------------------------------------------------------------------------"));
                table.addCell(new PdfPCell(new Paragraph("Item ID", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                table.addCell(new PdfPCell(new Paragraph("Item Name", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                table.addCell(new PdfPCell(new Paragraph("Brand", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                table.addCell(new PdfPCell(new Paragraph("Model", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                table.addCell(new PdfPCell(new Paragraph("Available Qty", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));

                for (int i = 0; i < jTable5.getRowCount(); i++) {

                    table.addCell(new PdfPCell(new Paragraph(jTable5.getValueAt(i, 0).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                    table.addCell(new PdfPCell(new Paragraph(jTable5.getValueAt(i, 1).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                    table.addCell(new PdfPCell(new Paragraph(jTable5.getValueAt(i, 2).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                    table.addCell(new PdfPCell(new Paragraph(jTable5.getValueAt(i, 3).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                    table.addCell(new PdfPCell(new Paragraph(jTable5.getValueAt(i, 4).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));

                }

                myDocument.add(table);

                // myDocument.add(new Paragraph("--------------------------------------------------------------------------------------------------------------------------------"));
                myDocument.close();

                JOptionPane.showMessageDialog(null, "Report was successfully generated");

            } catch (DocumentException ex) {
                Logger.getLogger(Allreports.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Allreports.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        view v = new view();
        String dt1 = new SimpleDateFormat("yyyy-MM-dd").format(dateChooserCombo5.getSelectedDate().getTime());
        String dt2 = new SimpleDateFormat("yyyy-MM-dd").format(dateChooserCombo6.getSelectedDate().getTime());
        if (jComboBox2.getSelectedItem().toString().equals("Stock Items")) {
            ResultSet rs1 = v.getTable("SELECT item.ItemName,item.Brand,item.Model, SUM(sell.Qty) as Qty, sell.unitprice,sell.discount,SUM(sell.Qty*(sell.unitprice-sell.discount)) AS total FROM `sell` INNER JOIN sales ON sell.InvoiceNo=sales.InvoiceNo INNER JOIN item ON item.ItemID=sell.ItemID WHERE sales.date BETWEEN '" + dt1 + "' AND '" + dt2 + "' GROUP BY sell.ItemID");
            ResultSet rs3 = v.getTable("SELECT item.ItemName,item.Brand,item.Model, SUM(include.Qty) as Qty, item.Price,SUM(include.Qty*(item.Price)) AS total FROM `include` INNER JOIN serviceinvoice ON include.InvoiceNo=serviceinvoice.InvoiceNo INNER JOIN item ON item.ItemID=include.ItemID WHERE serviceinvoice.date BETWEEN '" + dt1 + "' AND '" + dt2 + "' GROUP BY include.ItemID");
            jTable6.setModel(DbUtils.resultSetToTableModel(rs3));
            jTable6.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
            jTable3.setModel(DbUtils.resultSetToTableModel(rs1));
            jTable3.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
            double total = 0.0;
            for (int i = 0; i < jTable3.getRowCount(); i++) {
                total = total + Double.valueOf(jTable3.getModel().getValueAt(i, 6).toString());
            }
            for (int i = 0; i < jTable6.getRowCount(); i++) {
                total = total + Double.valueOf(jTable6.getModel().getValueAt(i, 5).toString());
            }
            jTextField7.setText(String.valueOf(total));
        } else {

            ResultSet rs2 = v.getTable("SELECT sales.date,item.ItemName,item.Brand,item.Model, SUM(sell.Qty) as Qty, sell.unitprice,sell.discount,SUM(sell.Qty*(sell.unitprice-sell.discount)) AS total FROM `sell` INNER JOIN sales ON sell.InvoiceNo=sales.InvoiceNo INNER JOIN item ON item.ItemID=sell.ItemID WHERE sales.date BETWEEN '" + dt1 + "' AND '" + dt2 + "' GROUP BY sales.date");
            ResultSet rs3 = v.getTable("SELECT serviceinvoice.date,item.ItemName,item.Brand,item.Model, SUM(include.Qty) as Qty, item.Price,SUM(include.Qty*(item.Price)) AS total FROM `include` INNER JOIN serviceinvoice ON include.InvoiceNo=serviceinvoice.InvoiceNo INNER JOIN item ON item.ItemID=include.ItemID WHERE serviceinvoice.date BETWEEN '" + dt1 + "' AND '" + dt2 + "' GROUP BY serviceinvoice.Date");
            jTable6.setModel(DbUtils.resultSetToTableModel(rs3));
            jTable6.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
            jTable3.setModel(DbUtils.resultSetToTableModel(rs2));
            jTable3.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
            double total = 0.0;
            for (int i = 0; i < jTable3.getRowCount(); i++) {
                total = total + Double.valueOf(jTable3.getModel().getValueAt(i, 7).toString());
            }
            for (int i = 0; i < jTable6.getRowCount(); i++) {
                total = total + Double.valueOf(jTable6.getModel().getValueAt(i, 6).toString());
            }
            jTextField7.setText(String.valueOf(total));
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        String today = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(Calendar.getInstance().getTime());
        JFileChooser dialog = new JFileChooser();
        dialog.setSelectedFile(new File("sales report by.pdf"));
        int dialogResult = dialog.showSaveDialog(null);
        if (dialogResult == JFileChooser.APPROVE_OPTION) {
            String filePath = dialog.getSelectedFile().getPath();

            try {

                Document myDocument = new Document();

                PdfWriter myWriter = PdfWriter.getInstance(myDocument, new FileOutputStream(filePath));
                myDocument.open();
                myWriter.setPageEvent(new MyPdfPageEventHelper("saman.png"));
                myDocument.add(new Paragraph("\n\n\n\n\n\n\n\n\n"));

                myDocument.add(new Paragraph("", FontFactory.getFont(FontFactory.TIMES_BOLD, 20, Font.BOLD)));
                myDocument.add(new Paragraph("", FontFactory.getFont(FontFactory.TIMES_BOLD, 15, Font.PLAIN)));
                myDocument.add(new Paragraph("", FontFactory.getFont(FontFactory.TIMES_BOLD, 15, Font.PLAIN)));

                Paragraph ph = new Paragraph("SALES\n", FontFactory.getFont(FontFactory.TIMES_BOLD, 20, Font.BOLD));
                ph.setAlignment(Paragraph.ALIGN_CENTER);
                myDocument.add(ph);

                myDocument.add(new Paragraph("\n\n"));

                String from = new SimpleDateFormat("dd-MM-yyyy").format(dateChooserCombo5.getSelectedDate().getTime());
                String to = new SimpleDateFormat("dd-MM-yyyy").format(dateChooserCombo6.getSelectedDate().getTime());

                PdfPTable table3 = new PdfPTable(2);
                table3.setWidthPercentage(100);
                float[] columnWidths3 = new float[]{12, 4};
                table3.setWidths(columnWidths3);

                PdfPCell cell1 = new PdfPCell(new Paragraph("from: " + from, FontFactory.getFont(FontFactory.TIMES, 12)));

                PdfPCell cell2 = new PdfPCell(new Paragraph("To: " + to, FontFactory.getFont(FontFactory.TIMES, 12)));
                cell2.setHorizontalAlignment(Element.ALIGN_LEFT);
                cell1.setBorderColor(BaseColor.WHITE);
                cell2.setBorderColor(BaseColor.WHITE);

                table3.addCell(cell1);
                table3.addCell(cell2);

                myDocument.add(table3);
                myDocument.add(new Paragraph("\n\n"));

                if (jComboBox2.getSelectedItem().toString().equals("Stock Items")) {
                    myDocument.add(new Paragraph("Sales"));
                    myDocument.add(new Paragraph("\n"));
                    PdfPTable table = new PdfPTable(7);

                    table.setWidthPercentage(100);
                    float[] columnWidths = new float[]{5, 5, 5, 5, 5, 5, 5};
                    table.setWidths(columnWidths);

                    //myDocument.add(new Paragraph(new Date().toString()));
                    //myDocument.add(new Paragraph("--------------------------------------------------------------------------------------------------------------------------------"));
                    table.addCell(new PdfPCell(new Paragraph("Item Name", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Brand", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Model", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Qty", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Unit Price", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Discount", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Total", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));

                    for (int i = 0; i < jTable3.getRowCount(); i++) {

                        table.addCell(new PdfPCell(new Paragraph(jTable3.getValueAt(i, 0).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(jTable3.getValueAt(i, 1).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(jTable3.getValueAt(i, 2).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(jTable3.getValueAt(i, 3).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(jTable3.getValueAt(i, 4).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(jTable3.getValueAt(i, 5).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(jTable3.getValueAt(i, 6).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));

                    }

                    myDocument.add(table);
                    myDocument.add(new Paragraph("\n"));
                    myDocument.add(new Paragraph("\n"));
                    myDocument.add(new Paragraph("Service Sales"));
                    myDocument.add(new Paragraph("\n"));
                    PdfPTable table1 = new PdfPTable(6);

                    table1.setWidthPercentage(100);
                    float[] columnWidths1 = new float[]{5, 5, 5, 5, 5, 5};
                    table1.setWidths(columnWidths1);

                    //myDocument.add(new Paragraph(new Date().toString()));
                    //myDocument.add(new Paragraph("--------------------------------------------------------------------------------------------------------------------------------"));
                    table1.addCell(new PdfPCell(new Paragraph("Item Name", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table1.addCell(new PdfPCell(new Paragraph("Brand", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table1.addCell(new PdfPCell(new Paragraph("Model", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table1.addCell(new PdfPCell(new Paragraph("Qty", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table1.addCell(new PdfPCell(new Paragraph("Unit Price", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table1.addCell(new PdfPCell(new Paragraph("Total", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));

                    for (int i = 0; i < jTable6.getRowCount(); i++) {

                        table1.addCell(new PdfPCell(new Paragraph(jTable6.getValueAt(i, 0).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table1.addCell(new PdfPCell(new Paragraph(jTable6.getValueAt(i, 1).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table1.addCell(new PdfPCell(new Paragraph(jTable6.getValueAt(i, 2).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table1.addCell(new PdfPCell(new Paragraph(jTable6.getValueAt(i, 3).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table1.addCell(new PdfPCell(new Paragraph(jTable6.getValueAt(i, 4).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table1.addCell(new PdfPCell(new Paragraph(jTable6.getValueAt(i, 5).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));

                    }

                    myDocument.add(table1);

                    myDocument.add(new Paragraph("\n"));
                    Paragraph pp = new Paragraph("Total sales:Rs " + jTextField7.getText() + "", FontFactory.getFont(FontFactory.TIMES, 12));
                    pp.setAlignment(Element.ALIGN_RIGHT);
                    myDocument.add(pp);
                    myDocument.add(new Paragraph("\n\n\n"));
                    myDocument.add(new Paragraph("--------------------------------------------------------------------------------------------------------------------------------"));

                    myDocument.close();

                } else {
                    myDocument.add(new Paragraph("Sales"));
                    myDocument.add(new Paragraph("\n"));
                    PdfPTable table = new PdfPTable(8);

                    table.setWidthPercentage(100);
                    float[] columnWidths = new float[]{5, 5, 5, 5, 5, 5, 5, 5};
                    table.setWidths(columnWidths);

                    // myDocument.add(new Paragraph(new Date().toString()));
                    // myDocument.add(new Paragraph("--------------------------------------------------------------------------------------------------------------------------------"));
                    table.addCell(new PdfPCell(new Paragraph("Date", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Item Name", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Brand", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Model", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Qty", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Unit Price", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Discount", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Total", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));

                    for (int i = 0; i < jTable3.getRowCount(); i++) {

                        table.addCell(new PdfPCell(new Paragraph(jTable3.getValueAt(i, 0).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(jTable3.getValueAt(i, 1).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(jTable3.getValueAt(i, 2).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(jTable3.getValueAt(i, 3).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(jTable3.getValueAt(i, 4).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(jTable3.getValueAt(i, 5).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(jTable3.getValueAt(i, 6).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table.addCell(new PdfPCell(new Paragraph(jTable3.getValueAt(i, 7).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        //  table.addCell(new PdfPCell(new Paragraph(jTable3.getValueAt(i, 8).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));

                    }

                    myDocument.add(table);

                    myDocument.add(new Paragraph("\n"));
                    myDocument.add(new Paragraph("\n"));
                    myDocument.add(new Paragraph("Service Sales"));
                    myDocument.add(new Paragraph("\n"));
                    PdfPTable table1 = new PdfPTable(7);

                    table1.setWidthPercentage(100);
                    float[] columnWidths1 = new float[]{5, 5, 5, 5, 5, 5, 5};
                    table1.setWidths(columnWidths1);

                    //myDocument.add(new Paragraph(new Date().toString()));
                    //myDocument.add(new Paragraph("--------------------------------------------------------------------------------------------------------------------------------"));
                    table1.addCell(new PdfPCell(new Paragraph("Date", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table1.addCell(new PdfPCell(new Paragraph("Item Name", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table1.addCell(new PdfPCell(new Paragraph("Brand", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table1.addCell(new PdfPCell(new Paragraph("Model", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table1.addCell(new PdfPCell(new Paragraph("Qty", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table1.addCell(new PdfPCell(new Paragraph("Unit Price", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                    table1.addCell(new PdfPCell(new Paragraph("Total", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));

                    for (int i = 0; i < jTable6.getRowCount(); i++) {

                        table1.addCell(new PdfPCell(new Paragraph(jTable6.getValueAt(i, 0).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table1.addCell(new PdfPCell(new Paragraph(jTable6.getValueAt(i, 1).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table1.addCell(new PdfPCell(new Paragraph(jTable6.getValueAt(i, 2).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table1.addCell(new PdfPCell(new Paragraph(jTable6.getValueAt(i, 3).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table1.addCell(new PdfPCell(new Paragraph(jTable6.getValueAt(i, 4).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table1.addCell(new PdfPCell(new Paragraph(jTable6.getValueAt(i, 5).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                        table1.addCell(new PdfPCell(new Paragraph(jTable6.getValueAt(i, 6).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));

                    }

                    myDocument.add(table1);

                    myDocument.add(new Paragraph("\n"));
                    Paragraph pp = new Paragraph("Total sales: " + jTextField7.getText() + "", FontFactory.getFont(FontFactory.TIMES, 12));
                    pp.setAlignment(Element.ALIGN_RIGHT);
                    myDocument.add(pp);
                    myDocument.add(new Paragraph("\n\n\n"));
                    myDocument.add(new Paragraph("--------------------------------------------------------------------------------------------------------------------------------"));

                    myDocument.close();

                }

                JOptionPane.showMessageDialog(null, "Report was successfully generated");

            } catch (DocumentException ex) {
                Logger.getLogger(Allreports.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Allreports.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        DashBoard dbd = new DashBoard();
        dbd.setVisible(true);
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        view v = new view();
        String dt1 = new SimpleDateFormat("yyyy-MM-dd").format(pdatefrom.getSelectedDate().getTime());
        String dt2 = new SimpleDateFormat("yyyy-MM-dd").format(pdateto.getSelectedDate().getTime());
        if (jComboBox1.getSelectedItem().toString().equals("Stock Items")) {
            ResultSet rs1 = v.getTable("SELECT item.ItemName,item.Brand,item.Model, SUM(contain.Qty) as Qty, contain.price,SUM(contain.Qty*contain.price) as total FROM `contain` INNER JOIN iteminvoice ON contain.InvoiceNo=iteminvoice.InvoiceNo INNER JOIN item ON item.ItemID=contain.ItemID WHERE iteminvoice.date BETWEEN '" + dt1 + "' AND '" + dt2 + "' GROUP BY contain.ItemID");
            jTable1.setModel(DbUtils.resultSetToTableModel(rs1));
            jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
            double total = 0.0;
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                total = total + Double.valueOf(jTable1.getModel().getValueAt(i, 5).toString());
            }
            ptotal.setText(String.valueOf(total));
        } else {

            ResultSet rs2 = v.getTable("SELECT iteminvoice.date,item.ItemID,item.ItemName,item.Brand,item.Model, SUM(contain.Qty) as Qty, contain.price,SUM(contain.Qty*contain.price) AS total FROM `contain` INNER JOIN iteminvoice ON contain.InvoiceNo=iteminvoice.InvoiceNo INNER JOIN item ON item.ItemID=contain.ItemID WHERE iteminvoice.date BETWEEN '" + dt1 + "' AND '" + dt2 + "' Group by iteminvoice.date");
            jTable1.setModel(DbUtils.resultSetToTableModel(rs2));
            jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
            double total = 0.0;
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                total = total + Double.valueOf(jTable1.getModel().getValueAt(i, 6).toString());
            }
            ptotal.setText(String.valueOf(total));
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        this.dispose();
        DashBoard dbd = new DashBoard();
        dbd.setVisible(true);
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged

    }//GEN-LAST:event_jComboBox1ItemStateChanged
    int c = 0;
    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        view v = new view();
        String dt1 = new SimpleDateFormat("yyyy-MM-dd").format(dateChooserCombo7.getSelectedDate().getTime());
        String dt2 = new SimpleDateFormat("yyyy-MM-dd").format(dateChooserCombo8.getSelectedDate().getTime());
        try {
            ResultSet rs = v.getTable("SELECT removed.itemId,item.Brand,item.Model,removed.Qty,removed.date,removed.reason FROM item INNER JOIN removed on item.itemId=removed.itemId WHERE removed.date BETWEEN '" + dt1 + "' AND '" + dt2 + "'");
            jTable4.setModel(DbUtils.resultSetToTableModel(rs));
            c++;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error!! try again");
            c = 0;
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        String today = new SimpleDateFormat("yyyy-MM-dd HH/mm/ss").format(Calendar.getInstance().getTime());
        JFileChooser dialog = new JFileChooser();
        dialog.setSelectedFile(new File("Removed Item report - " + today + ".pdf"));
        int dialogResult = dialog.showSaveDialog(null);
        if (dialogResult == JFileChooser.APPROVE_OPTION) {
            String filePath = dialog.getSelectedFile().getPath();

            try {

                Document myDocument = new Document();

                PdfWriter myWriter = PdfWriter.getInstance(myDocument, new FileOutputStream(filePath));
                myDocument.open();
                myWriter.setPageEvent(new MyPdfPageEventHelper("saman.png"));
                myDocument.add(new Paragraph("\n\n\n\n\n\n\n\n\n"));

                myDocument.add(new Paragraph("", FontFactory.getFont(FontFactory.TIMES_BOLD, 20, Font.BOLD)));
                myDocument.add(new Paragraph("", FontFactory.getFont(FontFactory.TIMES_BOLD, 15, Font.PLAIN)));
                myDocument.add(new Paragraph("", FontFactory.getFont(FontFactory.TIMES_BOLD, 15, Font.PLAIN)));
                //myDocument.add(new Paragraph("Removed Item Report", FontFactory.getFont(FontFactory.TIMES_BOLD, 20, Font.BOLD)));

                Paragraph ph = new Paragraph("Removed Items\n", FontFactory.getFont(FontFactory.TIMES_BOLD, 20, Font.BOLD));
                ph.setAlignment(Paragraph.ALIGN_CENTER);
                myDocument.add(ph);

                myDocument.add(new Paragraph("\n\n"));

                String from = new SimpleDateFormat("dd-MM-yyyy").format(pdatefrom.getSelectedDate().getTime());
                String to = new SimpleDateFormat("dd-MM-yyyy").format(pdateto.getSelectedDate().getTime());

                PdfPTable table3 = new PdfPTable(2);
                table3.setWidthPercentage(100);
                float[] columnWidths3 = new float[]{12, 4};
                table3.setWidths(columnWidths3);

                PdfPCell cell1 = new PdfPCell(new Paragraph("from: " + from, FontFactory.getFont(FontFactory.TIMES, 12)));

                PdfPCell cell2 = new PdfPCell(new Paragraph("To: " + to, FontFactory.getFont(FontFactory.TIMES, 12)));
                cell2.setHorizontalAlignment(Element.ALIGN_LEFT);
                cell1.setBorderColor(BaseColor.WHITE);
                cell2.setBorderColor(BaseColor.WHITE);

                table3.addCell(cell1);
                table3.addCell(cell2);

                myDocument.add(table3);
                myDocument.add(new Paragraph("\n\n"));
                PdfPTable table = new PdfPTable(6);

                table.setWidthPercentage(100);
                float[] columnWidths = new float[]{5, 5, 5, 5, 5, 7};
                table.setWidths(columnWidths);

                //  myDocument.add(new Paragraph(new Date().toString()));
                //  myDocument.add(new Paragraph("--------------------------------------------------------------------------------------------------------------------------------"));
                table.addCell(new PdfPCell(new Paragraph("Item ID", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                table.addCell(new PdfPCell(new Paragraph("Brand", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                table.addCell(new PdfPCell(new Paragraph("Model", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                table.addCell(new PdfPCell(new Paragraph("Qty", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                table.addCell(new PdfPCell(new Paragraph("Date", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                table.addCell(new PdfPCell(new Paragraph("Reason", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));

                for (int i = 0; i < jTable4.getRowCount(); i++) {

                    table.addCell(new PdfPCell(new Paragraph(jTable4.getValueAt(i, 0).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                    table.addCell(new PdfPCell(new Paragraph(jTable4.getValueAt(i, 1).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                    table.addCell(new PdfPCell(new Paragraph(jTable4.getValueAt(i, 2).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                    table.addCell(new PdfPCell(new Paragraph(jTable4.getValueAt(i, 3).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                    table.addCell(new PdfPCell(new Paragraph(jTable4.getValueAt(i, 4).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                    table.addCell(new PdfPCell(new Paragraph(jTable4.getValueAt(i, 4).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                    table.addCell(new PdfPCell(new Paragraph(jTable4.getValueAt(i, 5).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));

                }

                myDocument.add(table);
                myDocument.add(new Paragraph("\n\n"));
                myDocument.add(new Paragraph("\n\n"));

                myDocument.add(new Paragraph("--------------------------------------------------------------------------------------------------------------------------------"));

                myDocument.close();

                JOptionPane.showMessageDialog(null, "Report was successfully generated");

            } catch (DocumentException ex) {
                Logger.getLogger(Allreports.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Allreports.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        //     DefaultTableModel tb1 = (DefaultTableModel) jTable2.getModel();
//        for(int i=0; i < tb1.getRowCount();i++){
//            tb1.removeRow(i);
//        }
//        try {
//            String from = new SimpleDateFormat("yyyy-MM-dd").format(dateChooserCombo3.getSelectedDate().getTime());
//            String to = new SimpleDateFormat("yyyy-MM-dd").format(dateChooserCombo4.getSelectedDate().getTime());
//            view v = new view();
//
//            ResultSet rs1 = v.getTable("SELECT sell.ItemID,(sell.unitprice-contain.price-sell.discount) FROM sell INNER JOIN contain ON sell.ItemID=contain.ItemID INNER JOIN sales ON sell.InvoiceNo=sales.InvoiceNo WHERE sales.date BETWEEN '" + from + "' AND '" + to + "'");
//            String s="select include.ItemId, item.Price-contain.price"
//            ResultSet rs3 = v.getTable("select sum(Total) from serviceinvoice where Date between '" + from + "' and '" + to + "'");
//
//            Double sum = 0.0;
//
//            while (rs1.next()) {
//                sum = sum + Double.parseDouble(rs1.getString(2));
//            }
//
//            rs3.next();
//            String ser = rs3.getString(1);
//            DefaultTableModel tb = (DefaultTableModel) jTable2.getModel();
//
//            tb.addRow(new Object[]{"Sales Profit", String.valueOf(sum)});
//
//            tb.addRow(new Object[]{"Total Services", ser});
//
//            Double total = sum + Double.parseDouble(ser);
//
//            jTextField1.setText(String.valueOf(total));
//
//        } catch (SQLException ex) {
//            Logger.getLogger(Allreports.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton22ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Allreports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Allreports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Allreports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Allreports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Allreports().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private datechooser.beans.DateChooserCombo dateChooserCombo5;
    private datechooser.beans.DateChooserCombo dateChooserCombo6;
    private datechooser.beans.DateChooserCombo dateChooserCombo7;
    private datechooser.beans.DateChooserCombo dateChooserCombo8;
    private datechooser.beans.DateChooserCombo dateChooserCombo9;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTextField jTextField7;
    private datechooser.beans.DateChooserCombo pdatefrom;
    private datechooser.beans.DateChooserCombo pdateto;
    private javax.swing.JTextField ptotal;
    // End of variables declaration//GEN-END:variables
}
