/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ServiceCenter;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Shehan Atapattu
 */
public class Service extends javax.swing.JFrame {

    view v = new view();
    String cus1 = Values.customer;

    /**
     * Creates new form Service
     */
    public Service() {

        initComponents();
        cus.setText(cus1);
serviceslist2.setEnabled(false);
        loadCombo();
        invo();
        ResultSet rs1 = v.getTable("SELECT `Frequency` FROM `customer` WHERE Name='" + cus1 + "'");
        try {
            while (rs1.next()) {

                visit.setText(rs1.getString(1));
                int x = rs1.getInt(1);
                if (x >= 5 && x <= 7) {
                    loyal.setText("5");
                } else if (x >= 8 && x <= 10) {
                    loyal.setText("7");
                } else if (x > 10) {
                    loyal.setText("10");
                } else {
                    loyal.setText("0");
                }

            }
            int inv=0;
            ResultSet rs=v.getTable("select count(InvoiceNo) from serviceinvoice");
            while(rs.next()){
                inv=Integer.parseInt(rs.getString(1))+1;
            }
            jTextField5.setText(String.valueOf(inv));
        } catch (SQLException ex) {
            Logger.getLogger(Service.class.getName()).log(Level.SEVERE, null, ex);
        }

//        ResultSet rs=v.getTable("SELECT `ServiceType` FROM `service` WHERE `VehicleType`='"+Values.vehicletype+"'");
//        try {
//            while(rs.next()){
//                serviceslist.addItem(rs.getString(1));
//            }
//        } catch (SQLException ex) {
//            Logger.getLogger(Service.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }

    public void loadCombo() {
        ResultSet rs = v.getTable("SELECT DISTINCT(`ItemName`) FROM `item`");
        item.removeAllItems();
        try {
            while (rs.next()) {

                itemnm.addItem(rs.getString(1));
            }
            item.setSelectedIndex(-1);

        } catch (SQLException ex) {
            Logger.getLogger(sales.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void invo() {
        ResultSet rs = v.getTable("SELECT count(invoiceNo) FROM `serviceinvoice`");

        try {
            while (rs.next()) {

                jTextField5.setText(rs.getString(1));
            }

        } catch (SQLException ex) {
            Logger.getLogger(sales.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void loadservicelist() {
        ResultSet rs = v.getTable("SELECT DISTINCT(`ServiceType`) FROM `service`");

        try {
            while (rs.next()) {
                serviceslist2.addItem(rs.getString(1));
            }
            serviceslist2.setSelectedIndex(-1);

        } catch (SQLException ex) {
            Logger.getLogger(sales.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        serviceslist = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        itemmodel = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        item = new javax.swing.JComboBox();
        jTextField4 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        visit = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        loyal = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cus = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        serviceslist1 = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        serviceslist2 = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        itemnm = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1205, 843));
        setPreferredSize(new java.awt.Dimension(1205, 843));

        jPanel2.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Services:");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(200, 210, 100, 20);

        serviceslist.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Body wash", "Full service", "customized service" }));
        serviceslist.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                serviceslistItemStateChanged(evt);
            }
        });
        serviceslist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serviceslistActionPerformed(evt);
            }
        });
        jPanel2.add(serviceslist);
        serviceslist.setBounds(280, 200, 164, 40);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Unit price(Rs)", "Qty", "Total(Rs)"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(600, 400, 480, 140);

        jButton4.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jButton4.setText("Clear");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4);
        jButton4.setBounds(660, 650, 120, 50);

        jButton5.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jButton5.setText("Delete");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton5);
        jButton5.setBounds(510, 650, 130, 50);

        jButton3.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jButton3.setText("Save & Print");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3);
        jButton3.setBounds(790, 650, 200, 50);

        jLabel2.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Total: Rs");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(680, 570, 80, 30);

        jTextField3.setEditable(false);
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jPanel2.add(jTextField3);
        jTextField3.setBounds(760, 570, 170, 30);

        jButton2.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jButton2.setText("Home");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);
        jButton2.setBounds(90, 650, 130, 50);

        jPanel2.add(itemmodel);
        itemmodel.setBounds(820, 260, 103, 30);

        jLabel7.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Item Model:");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(710, 260, 110, 30);

        jLabel6.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Item Brand:");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(480, 320, 100, 30);

        item.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                itemItemStateChanged(evt);
            }
        });
        item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemActionPerformed(evt);
            }
        });
        jPanel2.add(item);
        item.setBounds(590, 320, 103, 30);

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField4KeyPressed(evt);
            }
        });
        jPanel2.add(jTextField4);
        jTextField4.setBounds(820, 320, 80, 30);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);
        jButton1.setBounds(980, 260, 90, 40);

        jLabel8.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(240, 240, 240));
        jLabel8.setText("Qty:");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(780, 320, 40, 24);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Service", "Total cost(Rs)"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(130, 400, 400, 143);

        visit.setEditable(false);
        visit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitActionPerformed(evt);
            }
        });
        jPanel2.add(visit);
        visit.setBounds(820, 200, 40, 30);

        jLabel4.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Loyalty Offer:");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(260, 570, 130, 26);

        loyal.setEditable(false);
        loyal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loyalActionPerformed(evt);
            }
        });
        loyal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                loyalKeyPressed(evt);
            }
        });
        jPanel2.add(loyal);
        loyal.setBounds(390, 570, 100, 30);

        jLabel5.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(240, 240, 240));
        jLabel5.setText("Visit");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(820, 170, 37, 24);

        cus.setEditable(false);
        cus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cusActionPerformed(evt);
            }
        });
        jPanel2.add(cus);
        cus.setBounds(590, 200, 160, 30);

        jLabel10.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Vehicle Type:");
        jPanel2.add(jLabel10);
        jLabel10.setBounds(150, 320, 130, 40);

        serviceslist1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "car", "van" }));
        serviceslist1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                serviceslist1ItemStateChanged(evt);
            }
        });
        serviceslist1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serviceslist1ActionPerformed(evt);
            }
        });
        jPanel2.add(serviceslist1);
        serviceslist1.setBounds(280, 320, 164, 40);

        jLabel13.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("customized Service:");
        jPanel2.add(jLabel13);
        jLabel13.setBounds(100, 270, 180, 30);

        serviceslist2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                serviceslist2ItemStateChanged(evt);
            }
        });
        serviceslist2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serviceslist2ActionPerformed(evt);
            }
        });
        jPanel2.add(serviceslist2);
        serviceslist2.setBounds(280, 260, 164, 40);

        jLabel9.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(240, 240, 240));
        jLabel9.setText("Customer:");
        jPanel2.add(jLabel9);
        jLabel9.setBounds(490, 190, 90, 50);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(240, 240, 240));
        jLabel15.setText("%");
        jPanel2.add(jLabel15);
        jLabel15.setBounds(500, 570, 50, 30);

        jLabel14.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Item Name:");
        jPanel2.add(jLabel14);
        jLabel14.setBounds(480, 254, 99, 40);

        jLabel11.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(240, 240, 240));
        jLabel11.setText("Invoice No:");
        jPanel2.add(jLabel11);
        jLabel11.setBounds(170, 160, 97, 20);

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });
        jPanel2.add(jTextField5);
        jTextField5.setBounds(280, 150, 103, 30);

        itemnm.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                itemnmItemStateChanged(evt);
            }
        });
        jPanel2.add(itemnm);
        itemnm.setBounds(590, 260, 103, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/sariya1200.jpg"))); // NOI18N
        jPanel2.add(jLabel1);
        jLabel1.setBounds(0, 0, 1200, 800);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1195, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 806, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        DashBoard dbd = new DashBoard();
        dbd.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed
    int c = 0;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try {
            DefaultTableModel tb1 = (DefaultTableModel) jTable1.getModel();
            DefaultTableModel tb = (DefaultTableModel) jTable2.getModel();

            try {

                if (serviceslist.getSelectedItem().toString().equals("customized service")) {

                    ResultSet rs1 = v.getTable("select cost from service where ServiceType='" + serviceslist2.getSelectedItem().toString() + "' and VehicleType='" + serviceslist1.getSelectedItem().toString() + "'");
                    rs1.next();
                    tb.addRow(new Object[]{
                        serviceslist2.getSelectedItem().toString() + " " + serviceslist1.getSelectedItem().toString(), rs1.getString(1)
                    });

                } else if (serviceslist.getSelectedItem().toString().equals("Body wash")) {
                    ResultSet rs1 = v.getTable("select cost from service where ServiceType='" + serviceslist.getSelectedItem().toString() + "' and VehicleType='" + serviceslist1.getSelectedItem().toString() + "'");

                    rs1.next();
                    tb.addRow(new Object[]{
                        serviceslist.getSelectedItem().toString() + " " + serviceslist1.getSelectedItem().toString(), rs1.getString(1)
                    });
                } else {

                    ResultSet rs1 = v.getTable("select cost from service where ServiceType='" + serviceslist2.getSelectedItem().toString() + "' and VehicleType='" + serviceslist1.getSelectedItem().toString() + "'");
                    rs1.next();
                    tb.addRow(new Object[]{
                        serviceslist2.getSelectedItem().toString() + " " + serviceslist1.getSelectedItem().toString(), rs1.getString(1)
                    });

                }
            } catch (SQLException ex) {
                Logger.getLogger(Service.class.getName()).log(Level.SEVERE, null, ex);
            }

            ResultSet rs = v.getTable("SELECT `ItemName`, `Brand`, `Model`, `Price` FROM `item` where Brand='" + item.getSelectedItem().toString() + "' and Model='" + itemmodel.getSelectedItem().toString() + "'");

            rs.next();
            tb1.addRow(new Object[]{
                rs.getString(1) + " " + rs.getString(2) + " " + rs.getString(3), rs.getString(4), jTextField4.getText(), (rs.getInt(4) * Integer.parseInt(jTextField4.getText()))
            });
            c++;

        } catch (SQLException ex) {
            Logger.getLogger(Service.class.getName()).log(Level.SEVERE, null, ex);
        }

        serviceslist1.setSelectedIndex(-1);
        item.setSelectedIndex(-1);
        itemmodel.setSelectedIndex(-1);
        jTextField4.setText("");

        double total = 0.0;
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            total = total + Double.valueOf(jTable1.getValueAt(i, 3).toString());
        }

        for (int i = 0; i < jTable2.getRowCount(); i++) {
            if (Integer.valueOf(loyal.getText()) >= 5) {
                total = total + ((Double.valueOf(jTable2.getValueAt(i, 1).toString()) * (100 - Integer.valueOf(loyal.getText()))) / 100);
            } else {
                total = total + (Double.valueOf(jTable2.getValueAt(i, 1).toString()));

            }

        }
        jTextField3.setText(String.valueOf(total));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void loyalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loyalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loyalActionPerformed

    private void cusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cusActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

    }//GEN-LAST:event_jButton4ActionPerformed

    private void itemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_itemItemStateChanged
//        brand.removeAllItems();
//        code.removeAllItems();
//        if (!(item.getSelectedIndex() == -1)) {
//            String mat = item.getSelectedItem().toString();
//            try {
//                ResultSet rs1 = v.getTable("SELECT DISTINCT(`Brand`) FROM `item` WHERE Item_name='" + mat + "'");
//                ResultSet rs2 = v.getTable("SELECT DISTINCT(`Model`) FROM `item` WHERE Item_name='" + mat + "'");
//                while (rs1.next()) {
//                    brand.addItem(rs1.getString(1));
//                }
//                while (rs2.next()) {
//                    code.addItem(rs2.getString(1));
//                }
//                brand.setSelectedIndex(-1);
//                code.setSelectedIndex(-1);
//            } catch (SQLException ex) {
//                Logger.getLogger(sales.class.getName()).log(Level.SEVERE, null, ex);
//            }
//
//        }
    }//GEN-LAST:event_itemItemStateChanged

    private void serviceslistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serviceslistActionPerformed
        if (serviceslist.getSelectedItem().toString().equals("Body wash")) {
            serviceslist2.setEnabled(false);

        } else if (serviceslist.getSelectedItem().toString().equals("Full service")) {
            serviceslist2.setEnabled(true);
            ResultSet rs2 = v.getTable("SELECT distinct(service.ServiceType) FROM `service` inner join fullservice on service.ServiceID=fullservice.id");
            serviceslist2.removeAllItems();
            try {
                while (rs2.next()) {

                    serviceslist2.addItem(rs2.getString(1));
                }
            } catch (SQLException ex) {
                Logger.getLogger(Service.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            serviceslist2.setEnabled(true);
            ResultSet rs2 = v.getTable("SELECT service.ServiceType FROM `service`");
            serviceslist2.removeAllItems();
            try {
                while (rs2.next()) {

                    serviceslist2.addItem(rs2.getString(1));
                }
            } catch (SQLException ex) {
                Logger.getLogger(Service.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_serviceslistActionPerformed

    private void serviceslistItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_serviceslistItemStateChanged

    }//GEN-LAST:event_serviceslistItemStateChanged

    private void serviceslist1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_serviceslist1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_serviceslist1ItemStateChanged

    private void serviceslist1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serviceslist1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_serviceslist1ActionPerformed

    private void serviceslist2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_serviceslist2ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_serviceslist2ItemStateChanged

    private void serviceslist2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serviceslist2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_serviceslist2ActionPerformed

    private void itemnmItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_itemnmItemStateChanged
        itemmodel.removeAllItems();
        item.removeAllItems();
        if (!(itemnm.getSelectedIndex() == -1)) {
            String mat = itemnm.getSelectedItem().toString();
            try {
                ResultSet rs1 = v.getTable("SELECT DISTINCT(`Brand`) FROM `item` WHERE ItemName='" + mat + "'");
                ResultSet rs2 = v.getTable("SELECT DISTINCT(`Model`) FROM `item` WHERE ItemName='" + mat + "'");
                while (rs1.next()) {
                    item.addItem(rs1.getString(1));
                }
                while (rs2.next()) {
                    itemmodel.addItem(rs2.getString(1));
                }
                item.setSelectedIndex(-1);
                itemmodel.setSelectedIndex(-1);
            } catch (SQLException ex) {
                Logger.getLogger(sales.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_itemnmItemStateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        if (c != 0) {

            String today = new SimpleDateFormat("yyyy-MM-dd").format(Calendar.getInstance().getTime());
            v.insert("insert into serviceinvoice values('" + today + "','" + jTextField5.getText() + "',(select CustomerID from customer where Name='" + cus.getText() + "'),'" + jTextField3.getText() + "','" + loyal.getText() + "')");

            for (int i = 0; i < jTable2.getRowCount(); i++) {
                String[] v1 = jTable2.getValueAt(i, 0).toString().split(" ");
                v.insert("insert into have values((select ServiceID from service where ServiceType='" + v1[0]+" "+v1[1] + "' and VehicleType='" + v1[2] + "'),'" + jTextField5.getText() + "')");
            }

            for (int j = 0; j < jTable1.getRowCount(); j++) {
                String[] x = jTable1.getValueAt(j, 0).toString().split(" ");
                v.insert("insert into include values('" + jTextField5.getText() + "', (select itemID from item where Brand='" + x[2] + "' and Model='" + x[3] + "'),'" + jTable1.getValueAt(j, 2) + "')");
            }
            print();
            invo();

        } else {
            JOptionPane.showMessageDialog(null, "Pls fill the bill");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    public void print() {
        String today = new SimpleDateFormat("yyyy-MM-dd hh/mm").format(Calendar.getInstance().getTime());
        String customer = cus.getText();
        JFileChooser dialog = new JFileChooser();
        dialog.setSelectedFile(new File(today + customer+"Cash Invoice.pdf"));
        int dialogResult = dialog.showSaveDialog(null);
        if (dialogResult == JFileChooser.APPROVE_OPTION) {
            try {
                String filePath = dialog.getSelectedFile().getPath();

                Document myDocument = new Document();
                PdfWriter myWriter = PdfWriter.getInstance(myDocument, new FileOutputStream(filePath));
                PdfPTable table = new PdfPTable(4);
                PdfPTable table1 = new PdfPTable(2);
                myDocument.open();

                float[] columnWidths1 = new float[]{16, 5};
                table1.setWidths(columnWidths1);

                table1.setWidthPercentage(100);

                table1.addCell(new PdfPCell(new Paragraph("Service", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                table1.addCell(new PdfPCell(new Paragraph("Total ", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));

                for (int i = 0; i < jTable2.getRowCount(); i++) {

                    table1.addCell(new PdfPCell(new Paragraph(jTable2.getValueAt(i, 0).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                    table1.addCell(new PdfPCell(new Paragraph(jTable2.getValueAt(i, 1).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));

                }
        myDocument.add(new Paragraph("\n"));
        
                float[] columnWidths = new float[]{3, 8, 5, 5};
                table.setWidths(columnWidths);

                table.setWidthPercentage(100); //set table width to 100%
   myWriter.setPageEvent(new MyPdfPageEventHelper("saman.png"));
                myDocument.add(new Paragraph("\n\n\n\n\n\n\n\n\n"));
                 Paragraph ph= new Paragraph("INVOICE\n", FontFactory.getFont(FontFactory.TIMES_BOLD, 20, Font.BOLD));
                ph.setAlignment(Paragraph.ALIGN_CENTER);
                myDocument.add(ph);
                   myDocument.add(new Paragraph("\n\n"));
                String adf = new SimpleDateFormat("dd-MM-yyyy").format(new Date());
               
                myDocument.add(new Paragraph("Invoice No: "+jTextField5.getText()+"                                                                                                               "+"Date :"+adf+"\n",FontFactory.getFont(FontFactory.TIMES, 12)));

                myDocument.add(new Paragraph("Customer: " + customer,FontFactory.getFont(FontFactory.TIMES, 12)));
                   myDocument.add(new Paragraph("\n"));
               // myDocument.add(new Paragraph("--------------------------------------------------------------------------------------------------------------------------------"));

                myDocument.add(new Paragraph("", FontFactory.getFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD)));
                myDocument.add(new Paragraph("", FontFactory.getFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD)));
                myDocument.add(new Paragraph("", FontFactory.getFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD)));
                myDocument.add(new Paragraph("", FontFactory.getFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD)));
                myDocument.add(new Paragraph("", FontFactory.getFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD)));

                table.addCell(new PdfPCell(new Paragraph("Item", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                table.addCell(new PdfPCell(new Paragraph("Quantity", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                table.addCell(new PdfPCell(new Paragraph("Unit Price", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));
                table.addCell(new PdfPCell(new Paragraph("Total", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD))));

                for (int i = 0; i < jTable1.getRowCount(); i++) {

                    table.addCell(new PdfPCell(new Paragraph(jTable1.getValueAt(i, 0).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                    table.addCell(new PdfPCell(new Paragraph(jTable1.getValueAt(i, 1).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                    table.addCell(new PdfPCell(new Paragraph(jTable1.getValueAt(i, 1).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));
                    table.addCell(new PdfPCell(new Paragraph(jTable1.getValueAt(i, 3).toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 8, Font.PLAIN))));

                }

                myDocument.add(table1);
                   myDocument.add(new Paragraph("\n\n"));
                myDocument.add(table);
                myDocument.add(new Paragraph(""));
                myDocument.add(new Paragraph("\n\n\n"));
                
                 PdfPTable table3 = new PdfPTable(2);
                 table3.setWidthPercentage(100);
                   float[] columnWidths3 = new float[]{15, 5};
                   table3.setWidths(columnWidths3);
                   
               double p= Double.parseDouble(loyal.getText());
                
                
            PdfPCell cell1= new PdfPCell(new Paragraph("Loyalty offer:" + p+"%",FontFactory.getFont(FontFactory.TIMES, 12)));
                 //plo.setAlignment(Paragraph.ALIGN_RIGHT);
               // myDocument.add(plo);
            double gt1=Double.parseDouble(jTextField3.getText());
            
           PdfPCell cell2 = new PdfPCell(new Paragraph("Total:Rs" +gt1 ,FontFactory.getFont(FontFactory.TIMES, 12)));
                 cell2.setHorizontalAlignment(Element.ALIGN_LEFT);
                 cell1.setBorderColor(BaseColor.WHITE);
                 cell2.setBorderColor(BaseColor.WHITE);
                 
                table3.addCell(cell1);
                table3.addCell(cell2);
                
                myDocument.add(table3);
                
                myDocument.add(new Paragraph("\n\n"));
                
                 Paragraph pt= new Paragraph("Thank You!\n", FontFactory.getFont(FontFactory.TIMES, 12));
                pt.setAlignment(Paragraph.ALIGN_CENTER);
                myDocument.add(pt);
                 myDocument.add(new Paragraph("\n"));
                
                myDocument.add(new Paragraph("--------------------------------------------------------------------------------------------------------------------------------"));
                myDocument.close();
                JOptionPane.showMessageDialog(null, "Report was successfully generated");
            } catch (DocumentException ex) {
                Logger.getLogger(sales.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(sales.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

        jTextField3.setText("");

        loyal.setText("");

        DefaultTableModel mdl = (DefaultTableModel) jTable1.getModel();
        mdl.setRowCount(0);

        DefaultTableModel mdl1 = (DefaultTableModel) jTable2.getModel();
        mdl1.setRowCount(0);

        customerReg cr = new customerReg();
        cr.setVisible(true);
        dispose();
    }

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void visitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_visitActionPerformed

    private void itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemActionPerformed
        ResultSet rs = v.getTable("select Model from item where Brand='" + item.getSelectedItem() + "'");
        itemmodel.removeAllItems();
        try {
            while (rs.next()) {
                itemmodel.addItem(rs.getString(1));

            }
        } catch (SQLException ex) {
            Logger.getLogger(StockUpdate.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_itemActionPerformed

    private void jTextField4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyPressed
    String ph=jTextField4.getText();
      
      int len=ph.length();
      char c= evt.getKeyChar();
      // check the character
      if(evt.getKeyChar()>='0'&& evt.getKeyChar()<='9'){
          
      if(len<3){
      jTextField4.setEditable(true);
      }else{
      jTextField4.setEditable(false);
      
      }
      }
      else{
      //erase number 'backspace work'
      if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE||evt.getExtendedKeyCode()==KeyEvent.VK_DELETE){
          // allo edit
          jTextField4.setEditable(true);
      }else{
           jTextField4.setEditable(false);
      }
      }        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4KeyPressed

    private void loyalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loyalKeyPressed
 String dis1=loyal.getText();
          int len=dis1.length();
  if(evt.getKeyChar()>='0'&& evt.getKeyChar()<='9'){
          loyal.setEditable(true);
      }else{
          
        if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE||evt.getExtendedKeyCode()==KeyEvent.VK_DELETE||evt.getExtendedKeyCode()==KeyEvent.VK_PERIOD){
          // allo edit
            
          loyal.setEditable(true);
          
      }else{
           loyal.setEditable(false);
      }}              // TODO add your handling code here:
    }//GEN-LAST:event_loyalKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Service.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Service.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Service.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Service.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Service().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cus;
    private javax.swing.JComboBox item;
    private javax.swing.JComboBox itemmodel;
    private javax.swing.JComboBox itemnm;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField loyal;
    private javax.swing.JComboBox serviceslist;
    private javax.swing.JComboBox serviceslist1;
    private javax.swing.JComboBox serviceslist2;
    private javax.swing.JTextField visit;
    // End of variables declaration//GEN-END:variables
}
